"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

import exlcm.HEADER

class Imu(object):
    __slots__ = ["header", "wx", "wy", "wz", "ax", "ay", "az", "variance", "temperature"]

    __typenames__ = ["exlcm.HEADER", "float", "float", "float", "float", "float", "float", "float", "float"]

    __dimensions__ = [None, None, None, None, None, None, None, [6], None]

    def __init__(self):
        self.header = exlcm.HEADER()
        self.wx = 0.0
        self.wy = 0.0
        self.wz = 0.0
        self.ax = 0.0
        self.ay = 0.0
        self.az = 0.0
        self.variance = [ 0.0 for dim0 in range(6) ]
        self.temperature = 0.0

    def encode(self):
        buf = BytesIO()
        buf.write(Imu._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        assert self.header._get_packed_fingerprint() == exlcm.HEADER._get_packed_fingerprint()
        self.header._encode_one(buf)
        buf.write(struct.pack(">ffffff", self.wx, self.wy, self.wz, self.ax, self.ay, self.az))
        buf.write(struct.pack('>6f', *self.variance[:6]))
        buf.write(struct.pack(">f", self.temperature))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != Imu._get_packed_fingerprint():
            raise ValueError("Decode error")
        return Imu._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = Imu()
        self.header = exlcm.HEADER._decode_one(buf)
        self.wx, self.wy, self.wz, self.ax, self.ay, self.az = struct.unpack(">ffffff", buf.read(24))
        self.variance = struct.unpack('>6f', buf.read(24))
        self.temperature = struct.unpack(">f", buf.read(4))[0]
        return self
    _decode_one = staticmethod(_decode_one)

    def _get_hash_recursive(parents):
        if Imu in parents: return 0
        newparents = parents + [Imu]
        tmphash = (0xe0661ba6a36cc10b+ exlcm.HEADER._get_hash_recursive(newparents)) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if Imu._packed_fingerprint is None:
            Imu._packed_fingerprint = struct.pack(">Q", Imu._get_hash_recursive([]))
        return Imu._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

